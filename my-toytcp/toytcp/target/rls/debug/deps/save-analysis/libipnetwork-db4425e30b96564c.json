{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0","program":"/home/santamn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ipnetwork","--edition=2018","/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=db4425e30b96564c","-C","extra-filename=-db4425e30b96564c","--out-dir","/home/santamn/ドキュメント/toytcp/my-toytcp/toytcp/target/rls/debug/deps","-L","dependency=/home/santamn/ドキュメント/toytcp/my-toytcp/toytcp/target/rls/debug/deps","--extern","serde=/home/santamn/ドキュメント/toytcp/my-toytcp/toytcp/target/rls/debug/deps/libserde-c43202f0401d01b4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/santamn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/santamn/ドキュメント/toytcp/my-toytcp/toytcp/target/rls/debug/deps/libipnetwork-db4425e30b96564c.rmeta"},"prelude":{"crate_id":{"name":"ipnetwork","disambiguator":[16071869682155034072,9471354008015461084]},"crate_root":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src","external_crates":[{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","num":18,"id":{"name":"serde","disambiguator":[16550686125771927978,4882246252023436455]}}],"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":0,"byte_end":11984,"line_start":1,"line_end":376,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":412,"byte_end":426,"line_start":18,"line_end":18,"column_start":24,"column_end":38},"alias_span":null,"name":"IpNetworkError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":488,"byte_end":507,"line_start":20,"line_end":20,"column_start":23,"column_end":42},"alias_span":null,"name":"ipv4_mask_to_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":509,"byte_end":520,"line_start":20,"line_end":20,"column_start":44,"column_end":55},"alias_span":null,"name":"Ipv4Network","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":583,"byte_end":602,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"alias_span":null,"name":"ipv6_mask_to_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":604,"byte_end":615,"line_start":22,"line_end":22,"column_start":44,"column_end":55},"alias_span":null,"name":"Ipv6Network","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":0,"byte_end":11984,"line_start":1,"line_end":376,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":20},{"krate":0,"index":68},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":263},{"krate":0,"index":291},{"krate":0,"index":289},{"krate":0,"index":288},{"krate":0,"index":285},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":272},{"krate":0,"index":270},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":293},{"krate":0,"index":321},{"krate":0,"index":319},{"krate":0,"index":318},{"krate":0,"index":315},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":302},{"krate":0,"index":300},{"krate":0,"index":135},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":323},{"krate":0,"index":332},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":336},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":166}],"decl_id":null,"docs":" The `ipnetwork` crate provides a set of APIs to work with IP CIDRs in\n Rust.\n","sig":null,"attributes":[{"value":"/ The `ipnetwork` crate provides a set of APIs to work with IP CIDRs in","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":0,"byte_end":73,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ Rust.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":74,"byte_end":83,"line_start":2,"line_end":2,"column_start":1,"column_end":10}},{"value":"crate_type = \"lib\"","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":84,"byte_end":106,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(missing_copy_implementations, missing_debug_implementations,\n       unsafe_code, unused_extern_crates, unused_import_braces)","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":168,"byte_end":310,"line_start":6,"line_end":10,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12167,"byte_end":12178,"line_start":6,"line_end":6,"column_start":5,"column_end":16},"name":"InvalidAddr","qualname":"::common::IpNetworkError::InvalidAddr","value":"IpNetworkError::InvalidAddr(String)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12192,"byte_end":12205,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"InvalidPrefix","qualname":"::common::IpNetworkError::InvalidPrefix","value":"IpNetworkError::InvalidPrefix","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12211,"byte_end":12228,"line_start":8,"line_end":8,"column_start":5,"column_end":22},"name":"InvalidCidrFormat","qualname":"::common::IpNetworkError::InvalidCidrFormat","value":"IpNetworkError::InvalidCidrFormat(String)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":167},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12146,"byte_end":12160,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"IpNetworkError","qualname":"::common::IpNetworkError","value":"pub enum IpNetworkError {\n    InvalidAddr(String),\n    InvalidPrefix,\n    InvalidCidrFormat(String),\n}","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":173}],"decl_id":null,"docs":" Represents a bunch of errors that can occur while working with a `IpNetwork`\n","sig":null,"attributes":[{"value":"/ Represents a bunch of errors that can occur while working with a `IpNetwork`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12017,"byte_end":12097,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":187},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14170,"byte_end":14181,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"Ipv4Network","qualname":"::ipv4::Ipv4Network","value":"Ipv4Network {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" Represents a network range where the IP addresses are of v4\n","sig":null,"attributes":[{"value":"/ Represents a network range where the IP addresses are of v4","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14027,"byte_end":14090,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15022,"byte_end":15025,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Network>::new","value":"pub fn new(Ipv4Addr, u8) -> Result<Ipv4Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv4Network` from any `Ipv4Addr` and a prefix denoting the network size.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv4Network` from any `Ipv4Addr` and a prefix denoting the network size.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14815,"byte_end":14909,"line_start":35,"line_end":35,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14914,"byte_end":14917,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the prefix is larger than 32 this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14922,"byte_end":15010,"line_start":37,"line_end":37,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15443,"byte_end":15455,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<Ipv4Network>::with_netmask","value":"pub fn with_netmask(Ipv4Addr, Ipv4Addr) -> Result<Ipv4Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv4Network` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv4Network` from a network address and a network mask.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15257,"byte_end":15334,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15339,"byte_end":15342,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15347,"byte_end":15431,"line_start":48,"line_end":48,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15923,"byte_end":15927,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"iter","qualname":"<Ipv4Network>::iter","value":"pub fn iter(Self) -> Ipv4NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `Ipv4Network`. Each call to `next` will return the next\n `Ipv4Addr` in the given network. `None` will be returned when there are no more\n addresses.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over `Ipv4Network`. Each call to `next` will return the next","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15720,"byte_end":15804,"line_start":61,"line_end":61,"column_start":5,"column_end":89}},{"value":"/ `Ipv4Addr` in the given network. `None` will be returned when there are no more","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15809,"byte_end":15892,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ addresses.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":15897,"byte_end":15911,"line_start":63,"line_end":63,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16157,"byte_end":16159,"line_start":73,"line_end":73,"column_start":12,"column_end":14},"name":"ip","qualname":"<Ipv4Network>::ip","value":"pub fn ip(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16216,"byte_end":16222,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Ipv4Network>::prefix","value":"pub fn prefix(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16343,"byte_end":16355,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"is_subnet_of","qualname":"<Ipv4Network>::is_subnet_of","value":"pub fn is_subnet_of(Self, Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is a subnet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is a subnet of the other.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16268,"byte_end":16331,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16553,"byte_end":16567,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"is_supernet_of","qualname":"<Ipv4Network>::is_supernet_of","value":"pub fn is_supernet_of(Self, Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is a supernet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is a supernet of the other.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16476,"byte_end":16541,"line_start":86,"line_end":86,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16727,"byte_end":16735,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Ipv4Network>::overlaps","value":"pub fn overlaps(Self, Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is partly contained in other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is partly contained in other.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16648,"byte_end":16715,"line_start":91,"line_end":91,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17477,"byte_end":17481,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"mask","qualname":"<Ipv4Network>::mask","value":"pub fn mask(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `Ipv4Network`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `Ipv4Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":16952,"byte_end":16996,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17001,"byte_end":17075,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17080,"byte_end":17083,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17088,"byte_end":17102,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17107,"byte_end":17110,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17115,"byte_end":17122,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17127,"byte_end":17154,"line_start":104,"line_end":104,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17159,"byte_end":17190,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17195,"byte_end":17198,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"127.0.0.0\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17203,"byte_end":17259,"line_start":107,"line_end":107,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(net.mask(), Ipv4Addr::new(255, 255, 255, 255));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17264,"byte_end":17326,"line_start":108,"line_end":108,"column_start":5,"column_end":67}},{"value":"/ let net: Ipv4Network = \"127.0.0.0/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17331,"byte_end":17390,"line_start":109,"line_end":109,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.mask(), Ipv4Addr::new(255, 255, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17395,"byte_end":17453,"line_start":110,"line_end":110,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17458,"byte_end":17465,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18053,"byte_end":18060,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv4Network>::network","value":"pub fn network(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `Ipv4Network`.\n This means the lowest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `Ipv4Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17635,"byte_end":17704,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/ This means the lowest possible IPv4 address inside of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17709,"byte_end":17779,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17784,"byte_end":17787,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17792,"byte_end":17806,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17811,"byte_end":17814,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17819,"byte_end":17826,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17831,"byte_end":17858,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17863,"byte_end":17894,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17899,"byte_end":17902,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.1.9.32/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17907,"byte_end":17966,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.network(), Ipv4Addr::new(10, 1, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":17971,"byte_end":18029,"line_start":128,"line_end":128,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18034,"byte_end":18041,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18623,"byte_end":18632,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv4Network>::broadcast","value":"pub fn broadcast(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcasting address of this `Ipv4Network`.\n This means the highest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcasting address of this `Ipv4Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18208,"byte_end":18267,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ This means the highest possible IPv4 address inside of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18272,"byte_end":18343,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18348,"byte_end":18351,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18356,"byte_end":18370,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18375,"byte_end":18378,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18383,"byte_end":18390,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18395,"byte_end":18422,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18427,"byte_end":18458,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18463,"byte_end":18466,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18471,"byte_end":18530,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.broadcast(), Ipv4Addr::new(10, 9, 255, 255));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18535,"byte_end":18599,"line_start":146,"line_end":146,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18604,"byte_end":18611,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19186,"byte_end":19194,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv4Network>::contains","value":"pub fn contains(Self, Ipv4Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `Ipv4Addr` is in this `Ipv4Network`","sig":null,"attributes":[{"value":"/ Checks if a given `Ipv4Addr` is in this `Ipv4Network`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18795,"byte_end":18852,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18857,"byte_end":18860,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18865,"byte_end":18879,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18884,"byte_end":18887,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18892,"byte_end":18899,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18904,"byte_end":18931,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18936,"byte_end":18967,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18972,"byte_end":18975,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":18980,"byte_end":19039,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ assert!(net.contains(Ipv4Addr::new(127, 0, 0, 70)));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19044,"byte_end":19100,"line_start":163,"line_end":163,"column_start":5,"column_end":61}},{"value":"/ assert!(!net.contains(Ipv4Addr::new(127, 0, 1, 70)));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19105,"byte_end":19162,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19167,"byte_end":19174,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19815,"byte_end":19819,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"size","qualname":"<Ipv4Network>::size","value":"pub fn size(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns number of possible host addresses in this `Ipv4Network`.","sig":null,"attributes":[{"value":"/ Returns number of possible host addresses in this `Ipv4Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19385,"byte_end":19453,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19458,"byte_end":19461,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19466,"byte_end":19480,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19485,"byte_end":19488,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19493,"byte_end":19500,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19505,"byte_end":19532,"line_start":177,"line_end":177,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19537,"byte_end":19568,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19573,"byte_end":19576,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.1.0.0/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19581,"byte_end":19639,"line_start":180,"line_end":180,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(net.size(), 65536);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19644,"byte_end":19678,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19683,"byte_end":19686,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let tinynet: Ipv4Network = \"0.0.0.0/32\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19691,"byte_end":19752,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(tinynet.size(), 1);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19757,"byte_end":19791,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19796,"byte_end":19803,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20629,"byte_end":20632,"line_start":208,"line_end":208,"column_start":12,"column_end":15},"name":"nth","qualname":"<Ipv4Network>::nth","value":"pub fn nth(Self, u32) -> Option<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `n`:th address within this network.\n The adresses are indexed from 0 and `n` must be smaller than the size of the network.","sig":null,"attributes":[{"value":"/ Returns the `n`:th address within this network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19940,"byte_end":19991,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"/ The adresses are indexed from 0 and `n` must be smaller than the size of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":19996,"byte_end":20085,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20090,"byte_end":20093,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20098,"byte_end":20112,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20117,"byte_end":20120,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20125,"byte_end":20132,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20137,"byte_end":20164,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20169,"byte_end":20200,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20205,"byte_end":20208,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"192.168.0.0/24\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20213,"byte_end":20274,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(net.nth(0).unwrap(), Ipv4Addr::new(192, 168, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20279,"byte_end":20346,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(net.nth(15).unwrap(), Ipv4Addr::new(192, 168, 0, 15));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20351,"byte_end":20420,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ assert!(net.nth(256).is_none());","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20425,"byte_end":20461,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20466,"byte_end":20469,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let net2: Ipv4Network = \"10.0.0.0/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20474,"byte_end":20533,"line_start":205,"line_end":205,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net2.nth(256).unwrap(), Ipv4Addr::new(10, 0, 1, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20538,"byte_end":20605,"line_start":206,"line_end":206,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20610,"byte_end":20617,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":217},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22296,"byte_end":22315,"line_start":267,"line_end":267,"column_start":12,"column_end":31},"name":"Ipv4NetworkIterator","qualname":"::ipv4::Ipv4NetworkIterator","value":"Ipv4NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22979,"byte_end":22998,"line_start":297,"line_end":297,"column_start":8,"column_end":27},"name":"ipv4_mask_to_prefix","qualname":"::ipv4::ipv4_mask_to_prefix","value":"pub fn ipv4_mask_to_prefix(Ipv4Addr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Ipv4Addr` network mask into a prefix.","sig":null,"attributes":[{"value":"/ Converts a `Ipv4Addr` network mask into a prefix.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22834,"byte_end":22887,"line_start":294,"line_end":294,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22888,"byte_end":22891,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22892,"byte_end":22971,"line_start":296,"line_end":296,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34204,"byte_end":34215,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"Ipv6Network","qualname":"::ipv6::Ipv6Network","value":"Ipv6Network {  }","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" Represents a network range where the IP addresses are of v6\n","sig":null,"attributes":[{"value":"/ Represents a network range where the IP addresses are of v6","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34061,"byte_end":34124,"line_start":7,"line_end":7,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35057,"byte_end":35060,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Network>::new","value":"pub fn new(Ipv6Addr, u8) -> Result<Ipv6Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv6Network` from any `Ipv6Addr` and a prefix denoting the network size.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv6Network` from any `Ipv6Addr` and a prefix denoting the network size.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34849,"byte_end":34943,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34948,"byte_end":34951,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ If the prefix is larger than 128 this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34956,"byte_end":35045,"line_start":38,"line_end":38,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35478,"byte_end":35490,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<Ipv6Network>::with_netmask","value":"pub fn with_netmask(Ipv6Addr, Ipv6Addr) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv6Network` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv6Network` from a network address and a network mask.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35292,"byte_end":35369,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35374,"byte_end":35377,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35382,"byte_end":35466,"line_start":49,"line_end":49,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35928,"byte_end":35932,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"iter","qualname":"<Ipv6Network>::iter","value":"pub fn iter(&Self) -> Ipv6NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `Ipv6Network`. Each call to `next` will return the next\n `Ipv6Addr` in the given network. `None` will be returned when there are no more\n addresses.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over `Ipv6Network`. Each call to `next` will return the next","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35725,"byte_end":35809,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/ `Ipv6Addr` in the given network. `None` will be returned when there are no more","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35814,"byte_end":35897,"line_start":60,"line_end":60,"column_start":5,"column_end":88}},{"value":"/ addresses.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":35902,"byte_end":35916,"line_start":61,"line_end":61,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36840,"byte_end":36847,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv6Network>::network","value":"pub fn network(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `Ipv6Network`.\n This means the lowest possible IPv6 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `Ipv6Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36401,"byte_end":36470,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ This means the lowest possible IPv6 address inside of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36475,"byte_end":36545,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36550,"byte_end":36553,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36558,"byte_end":36572,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36577,"byte_end":36580,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36585,"byte_end":36592,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36597,"byte_end":36624,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36629,"byte_end":36660,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36665,"byte_end":36668,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36673,"byte_end":36733,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(net.network(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36738,"byte_end":36816,"line_start":89,"line_end":89,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36821,"byte_end":36828,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37437,"byte_end":37446,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv6Network>::broadcast","value":"pub fn broadcast(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address of this `Ipv6Network`.\n This means the highest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcast address of this `Ipv6Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":36998,"byte_end":37054,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/ This means the highest possible IPv4 address inside of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37059,"byte_end":37130,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37135,"byte_end":37138,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37143,"byte_end":37157,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37162,"byte_end":37165,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37170,"byte_end":37177,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37182,"byte_end":37209,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37214,"byte_end":37245,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37250,"byte_end":37253,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37258,"byte_end":37318,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(net.broadcast(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0xffff, 0xffff));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37323,"byte_end":37413,"line_start":107,"line_end":107,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37418,"byte_end":37425,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37619,"byte_end":37621,"line_start":115,"line_end":115,"column_start":12,"column_end":14},"name":"ip","qualname":"<Ipv6Network>::ip","value":"pub fn ip(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37679,"byte_end":37685,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Ipv6Network>::prefix","value":"pub fn prefix(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37807,"byte_end":37819,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_subnet_of","qualname":"<Ipv6Network>::is_subnet_of","value":"pub fn is_subnet_of(Self, Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is a subnet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is a subnet of the other.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37732,"byte_end":37795,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38017,"byte_end":38031,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"is_supernet_of","qualname":"<Ipv6Network>::is_supernet_of","value":"pub fn is_supernet_of(Self, Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is a supernet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is a supernet of the other.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":37940,"byte_end":38005,"line_start":128,"line_end":128,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38191,"byte_end":38199,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Ipv6Network>::overlaps","value":"pub fn overlaps(Self, Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is partly contained in other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is partly contained in other.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38112,"byte_end":38179,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38999,"byte_end":39003,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"mask","qualname":"<Ipv6Network>::mask","value":"pub fn mask(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `Ipv6Network`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `Ipv6Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38416,"byte_end":38460,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38465,"byte_end":38539,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38544,"byte_end":38547,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38552,"byte_end":38566,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38571,"byte_end":38574,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38579,"byte_end":38586,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38591,"byte_end":38618,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38623,"byte_end":38654,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38659,"byte_end":38662,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38667,"byte_end":38721,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38726,"byte_end":38832,"line_start":150,"line_end":150,"column_start":5,"column_end":111}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38837,"byte_end":38894,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38899,"byte_end":38975,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":38980,"byte_end":38987,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39844,"byte_end":39852,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv6Network>::contains","value":"pub fn contains(&Self, Ipv6Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `Ipv6Addr` is in this `Ipv6Network`","sig":null,"attributes":[{"value":"/ Checks if a given `Ipv6Addr` is in this `Ipv6Network`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39423,"byte_end":39480,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39485,"byte_end":39488,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39493,"byte_end":39507,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39512,"byte_end":39515,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39520,"byte_end":39527,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39532,"byte_end":39559,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39564,"byte_end":39595,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39600,"byte_end":39603,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39608,"byte_end":39665,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"/ assert!(net.contains(Ipv6Addr::new(0xff01, 0, 0, 0, 0, 0, 0, 0x1)));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39670,"byte_end":39742,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/ assert!(!net.contains(Ipv6Addr::new(0xffff, 0, 0, 0, 0, 0, 0, 0x1)));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39747,"byte_end":39820,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":39825,"byte_end":39832,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40617,"byte_end":40621,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"size","qualname":"<Ipv6Network>::size","value":"pub fn size(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns number of possible host addresses in this `Ipv6Network`.","sig":null,"attributes":[{"value":"/ Returns number of possible host addresses in this `Ipv6Network`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40163,"byte_end":40231,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40236,"byte_end":40239,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40244,"byte_end":40258,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40263,"byte_end":40266,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40271,"byte_end":40278,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40283,"byte_end":40310,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40315,"byte_end":40346,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40351,"byte_end":40354,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40359,"byte_end":40416,"line_start":196,"line_end":196,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.size(), 79228162514264337593543950336);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40421,"byte_end":40479,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40484,"byte_end":40487,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let tinynet: Ipv6Network = \"ff01::0/128\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40492,"byte_end":40554,"line_start":199,"line_end":199,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(tinynet.size(), 1);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40559,"byte_end":40593,"line_start":200,"line_end":200,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40598,"byte_end":40605,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":41440,"byte_end":41459,"line_start":232,"line_end":232,"column_start":12,"column_end":31},"name":"Ipv6NetworkIterator","qualname":"::ipv6::Ipv6NetworkIterator","value":"Ipv6NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":42286,"byte_end":42305,"line_start":267,"line_end":267,"column_start":8,"column_end":27},"name":"ipv6_mask_to_prefix","qualname":"::ipv6::ipv6_mask_to_prefix","value":"pub fn ipv6_mask_to_prefix(Ipv6Addr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Ipv6Addr` network mask into a prefix.\n If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.\n","sig":null,"attributes":[{"value":"/ Converts a `Ipv6Addr` network mask into a prefix.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":42145,"byte_end":42198,"line_start":265,"line_end":265,"column_start":1,"column_end":54}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":42199,"byte_end":42278,"line_start":266,"line_end":266,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":813,"byte_end":815,"line_start":28,"line_end":28,"column_start":5,"column_end":7},"name":"V4","qualname":"::IpNetwork::V4","value":"IpNetwork::V4(Ipv4Network)","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":834,"byte_end":836,"line_start":29,"line_end":29,"column_start":5,"column_end":7},"name":"V6","qualname":"::IpNetwork::V6","value":"IpNetwork::V6(Ipv6Network)","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":263},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":797,"byte_end":806,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"IpNetwork","qualname":"::IpNetwork","value":"pub enum IpNetwork { V4(Ipv4Network), V6(Ipv6Network), }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":267}],"decl_id":null,"docs":" Represents a generic network range. This type can have two variants:\n the v4 and the v6 case.\n","sig":null,"attributes":[{"value":"/ Represents a generic network range. This type can have two variants:","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":619,"byte_end":691,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ the v4 and the v6 case.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":692,"byte_end":719,"line_start":25,"line_end":25,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":294},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1610,"byte_end":1612,"line_start":56,"line_end":56,"column_start":5,"column_end":7},"name":"V4","qualname":"::NetworkSize::V4","value":"NetworkSize::V4(u32)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1623,"byte_end":1625,"line_start":57,"line_end":57,"column_start":5,"column_end":7},"name":"V6","qualname":"::NetworkSize::V6","value":"NetworkSize::V6(u128)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":293},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1592,"byte_end":1603,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"NetworkSize","qualname":"::NetworkSize","value":"pub enum NetworkSize { V4(u32), V6(u128), }","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":297}],"decl_id":null,"docs":" Represents a generic network size. For IPv4, the max size is a u32 and for IPv6, it is a u128\n","sig":null,"attributes":[{"value":"/ Represents a generic network size. For IPv4, the max size is a u32 and for IPv6, it is a u128","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1417,"byte_end":1514,"line_start":53,"line_end":53,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<IpNetwork>::new","value":"pub fn new(IpAddr, u8) -> Result<IpNetwork, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `IpNetwork` from a given `IpAddr` and a prefix denoting the\n network size. If the prefix is larger than 32 (for IPv4) or 128 (for IPv6), this\n will raise an `IpNetworkError::InvalidPrefix` error. Support for IPv6 is not\n complete yet.\n","sig":null,"attributes":[{"value":"/ Constructs a new `IpNetwork` from a given `IpAddr` and a prefix denoting the","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1657,"byte_end":1737,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ network size. If the prefix is larger than 32 (for IPv4) or 128 (for IPv6), this","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1742,"byte_end":1826,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/ will raise an `IpNetworkError::InvalidPrefix` error. Support for IPv6 is not","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1831,"byte_end":1911,"line_start":63,"line_end":63,"column_start":5,"column_end":85}},{"value":"/ complete yet.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1916,"byte_end":1933,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2392,"byte_end":2404,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<IpNetwork>::with_netmask","value":"pub fn with_netmask(IpAddr, IpAddr) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `IpNetwork` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `IpNetwork` from a network address and a network mask.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2208,"byte_end":2283,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2288,"byte_end":2291,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2296,"byte_end":2380,"line_start":74,"line_end":74,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2627,"byte_end":2629,"line_start":81,"line_end":81,"column_start":12,"column_end":14},"name":"ip","qualname":"<IpNetwork>::ip","value":"pub fn ip(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP part of a given `IpNetwork`\n","sig":null,"attributes":[{"value":"/ Returns the IP part of a given `IpNetwork`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2569,"byte_end":2615,"line_start":80,"line_end":80,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3285,"byte_end":3291,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IpNetwork>::prefix","value":"pub fn prefix(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix of the given `IpNetwork`","sig":null,"attributes":[{"value":"/ Returns the prefix of the given `IpNetwork`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2804,"byte_end":2851,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2856,"byte_end":2859,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2864,"byte_end":2877,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2882,"byte_end":2889,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2894,"byte_end":2923,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2928,"byte_end":2931,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(IpNetwork::V4(\"10.9.0.1\".parse().unwrap()).prefix(), 32u8);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":2936,"byte_end":3010,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(IpNetwork::V4(\"10.9.0.32/16\".parse().unwrap()).prefix(), 16u8);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3015,"byte_end":3093,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3098,"byte_end":3101,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(IpNetwork::V6(\"ff01::0\".parse().unwrap()).prefix(), 128u8);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3106,"byte_end":3180,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(IpNetwork::V6(\"ff01::0/32\".parse().unwrap()).prefix(), 32u8);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3185,"byte_end":3261,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3266,"byte_end":3273,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4014,"byte_end":4021,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"network","qualname":"<IpNetwork>::network","value":"pub fn network(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `IpNetwork`.\n This means the lowest possible IP address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `IpNetwork`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3446,"byte_end":3513,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/ This means the lowest possible IP address inside of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3518,"byte_end":3586,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3591,"byte_end":3594,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3599,"byte_end":3613,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3618,"byte_end":3621,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3626,"byte_end":3633,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use std::net::{Ipv4Addr, Ipv6Addr};","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3638,"byte_end":3677,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3682,"byte_end":3711,"line_start":114,"line_end":114,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3716,"byte_end":3719,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"10.1.9.32/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3724,"byte_end":3781,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.network(), Ipv4Addr::new(10, 1, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3786,"byte_end":3844,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ let net: IpNetwork = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3849,"byte_end":3907,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(net.network(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3912,"byte_end":3990,"line_start":119,"line_end":119,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":3995,"byte_end":4002,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4630,"byte_end":4639,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<IpNetwork>::broadcast","value":"pub fn broadcast(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcasting address of this `IpNetwork`.\n This means the highest possible IP address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcasting address of this `IpNetwork`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4206,"byte_end":4263,"line_start":128,"line_end":128,"column_start":5,"column_end":62}},{"value":"/ This means the highest possible IP address inside of the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4268,"byte_end":4337,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4342,"byte_end":4345,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4350,"byte_end":4364,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4369,"byte_end":4372,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4377,"byte_end":4384,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4389,"byte_end":4416,"line_start":134,"line_end":134,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::{IpNetwork, Ipv4Network};","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4421,"byte_end":4465,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4470,"byte_end":4473,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4478,"byte_end":4537,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.broadcast(), Ipv4Addr::new(10, 9, 255, 255));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4542,"byte_end":4606,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4611,"byte_end":4618,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5696,"byte_end":5700,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"mask","qualname":"<IpNetwork>::mask","value":"pub fn mask(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `IpNetwork`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `IpNetwork`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4828,"byte_end":4870,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4875,"byte_end":4949,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4954,"byte_end":4957,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4962,"byte_end":4975,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4980,"byte_end":4983,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":4988,"byte_end":4995,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5000,"byte_end":5029,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/ use std::net::{Ipv4Addr, Ipv6Addr};","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5034,"byte_end":5073,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5078,"byte_end":5081,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let v4_net: IpNetwork = \"10.9.0.1\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5086,"byte_end":5142,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(v4_net.mask(), Ipv4Addr::new(255, 255, 255, 255));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5147,"byte_end":5212,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/ let v4_net: IpNetwork = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5217,"byte_end":5277,"line_start":158,"line_end":158,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(v4_net.mask(), Ipv4Addr::new(255, 255, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5282,"byte_end":5343,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5348,"byte_end":5351,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let v6_net: IpNetwork = \"ff01::0\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5356,"byte_end":5411,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v6_net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5416,"byte_end":5525,"line_start":162,"line_end":162,"column_start":5,"column_end":114}},{"value":"/ let v6_net: IpNetwork = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5530,"byte_end":5588,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(v6_net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5593,"byte_end":5672,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5677,"byte_end":5684,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6261,"byte_end":6268,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<IpNetwork>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the IP in this `IpNetwork` is a valid IPv4 address,\n false if it's a valid IPv6 address.","sig":null,"attributes":[{"value":"/ Returns true if the IP in this `IpNetwork` is a valid IPv4 address,","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5879,"byte_end":5950,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ false if it's a valid IPv6 address.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5955,"byte_end":5994,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":5999,"byte_end":6002,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6007,"byte_end":6020,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6025,"byte_end":6028,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6033,"byte_end":6039,"line_start":178,"line_end":178,"column_start":5,"column_end":11}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6044,"byte_end":6073,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6078,"byte_end":6081,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let v4: IpNetwork = IpNetwork::V4(\"10.9.0.32/16\".parse().unwrap());","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6086,"byte_end":6157,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(v4.is_ipv4(), true);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6162,"byte_end":6197,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v4.is_ipv6(), false);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6202,"byte_end":6238,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6243,"byte_end":6249,"line_start":184,"line_end":184,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6786,"byte_end":6793,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<IpNetwork>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the IP in this `IpNetwork` is a valid IPv6 address,\n false if it's a valid IPv4 address.","sig":null,"attributes":[{"value":"/ Returns true if the IP in this `IpNetwork` is a valid IPv6 address,","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6406,"byte_end":6477,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ false if it's a valid IPv4 address.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6482,"byte_end":6521,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6534,"byte_end":6547,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6552,"byte_end":6555,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6560,"byte_end":6566,"line_start":197,"line_end":197,"column_start":5,"column_end":11}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6571,"byte_end":6600,"line_start":198,"line_end":198,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6605,"byte_end":6608,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let v6: IpNetwork = IpNetwork::V6(\"ff01::0/32\".parse().unwrap());","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6613,"byte_end":6682,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(v6.is_ipv6(), true);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6687,"byte_end":6722,"line_start":201,"line_end":201,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v6.is_ipv4(), false);","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6727,"byte_end":6763,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":6768,"byte_end":6774,"line_start":203,"line_end":203,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7648,"byte_end":7656,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpNetwork>::contains","value":"pub fn contains(&Self, IpAddr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `IpAddr` is in this `IpNetwork`","sig":null,"attributes":[{"value":"/ Checks if a given `IpAddr` is in this `IpNetwork`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7118,"byte_end":7171,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7176,"byte_end":7179,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7184,"byte_end":7198,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7203,"byte_end":7206,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7211,"byte_end":7218,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7223,"byte_end":7248,"line_start":220,"line_end":220,"column_start":5,"column_end":30}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7253,"byte_end":7282,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7287,"byte_end":7290,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7295,"byte_end":7352,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/ let ip1: IpAddr = \"127.0.0.1\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7357,"byte_end":7408,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ let ip2: IpAddr = \"172.0.0.1\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7413,"byte_end":7464,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ let ip4: IpAddr = \"::1\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7469,"byte_end":7514,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/ assert!(net.contains(ip1));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7519,"byte_end":7550,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ assert!(!net.contains(ip2));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7555,"byte_end":7587,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ assert!(!net.contains(ip4));","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7592,"byte_end":7624,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7629,"byte_end":7636,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8216,"byte_end":8220,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"size","qualname":"<IpNetwork>::size","value":"pub fn size(&Self) -> NetworkSize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of possible host addresses in this `IpAddr`","sig":null,"attributes":[{"value":"/ Returns the number of possible host addresses in this `IpAddr`","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7899,"byte_end":7965,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7970,"byte_end":7973,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7978,"byte_end":7992,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":7997,"byte_end":8000,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8005,"byte_end":8012,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::{IpNetwork, NetworkSize};","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8017,"byte_end":8061,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8066,"byte_end":8069,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8074,"byte_end":8077,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8082,"byte_end":8139,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.size(), NetworkSize::V4(256))","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8144,"byte_end":8192,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8197,"byte_end":8204,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8585,"byte_end":8589,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"iter","qualname":"<IpNetwork>::iter","value":"pub fn iter(&Self) -> IpNetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the addresses contained in the network.","sig":null,"attributes":[{"value":"/ Returns an iterator over the addresses contained in the network.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8418,"byte_end":8486,"line_start":257,"line_end":257,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8491,"byte_end":8494,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This lists all the addresses in the network range, in ascending order.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":8499,"byte_end":8573,"line_start":259,"line_end":259,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10631,"byte_end":10648,"line_start":333,"line_end":333,"column_start":12,"column_end":29},"name":"IpNetworkIterator","qualname":"::IpNetworkIterator","value":"IpNetworkIterator {  }","parent":null,"children":[{"krate":0,"index":335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":166},"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":11314,"byte_end":11331,"line_start":357,"line_end":357,"column_start":8,"column_end":25},"name":"ip_mask_to_prefix","qualname":"::ip_mask_to_prefix","value":"pub fn ip_mask_to_prefix(IpAddr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `IpAddr` network mask into a prefix.\n If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.\n","sig":null,"attributes":[{"value":"/ Converts a `IpAddr` network mask into a prefix.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":11175,"byte_end":11226,"line_start":355,"line_end":355,"column_start":1,"column_end":52}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":11227,"byte_end":11306,"line_start":356,"line_end":356,"column_start":1,"column_end":80}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12263,"byte_end":12277,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12647,"byte_end":12661,"line_start":22,"line_end":22,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14287,"byte_end":14298,"line_start":14,"line_end":14,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14602,"byte_end":14613,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14797,"byte_end":14808,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20864,"byte_end":20875,"line_start":218,"line_end":218,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":21428,"byte_end":21439,"line_start":237,"line_end":237,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22113,"byte_end":22124,"line_start":257,"line_end":257,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22376,"byte_end":22395,"line_start":272,"line_end":272,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34321,"byte_end":34332,"line_start":15,"line_end":15,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34636,"byte_end":34647,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34831,"byte_end":34842,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40760,"byte_end":40771,"line_start":208,"line_end":208,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":41256,"byte_end":41267,"line_start":222,"line_end":222,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":41522,"byte_end":41541,"line_start":237,"line_end":237,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":42002,"byte_end":42013,"line_start":259,"line_end":259,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":918,"byte_end":927,"line_start":33,"line_end":33,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1229,"byte_end":1238,"line_start":44,"line_end":44,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1641,"byte_end":1650,"line_start":60,"line_end":60,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":9384,"byte_end":9393,"line_start":283,"line_end":283,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":9795,"byte_end":9804,"line_start":296,"line_end":296,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":9913,"byte_end":9922,"line_start":302,"line_end":302,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10026,"byte_end":10035,"line_start":308,"line_end":308,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10273,"byte_end":10282,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10707,"byte_end":10724,"line_start":337,"line_end":337,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12263,"byte_end":12277,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/common.rs","byte_start":12647,"byte_end":12661,"line_start":22,"line_end":22,"column_start":16,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":167},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14287,"byte_end":14298,"line_start":14,"line_end":14,"column_start":39,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":187},"to":{"krate":18,"index":1277}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14602,"byte_end":14613,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":187},"to":{"krate":18,"index":1768}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":14797,"byte_end":14808,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":20864,"byte_end":20875,"line_start":218,"line_end":218,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":21428,"byte_end":21439,"line_start":237,"line_end":237,"column_start":18,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22113,"byte_end":22124,"line_start":257,"line_end":257,"column_start":25,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv4.rs","byte_start":22376,"byte_end":22395,"line_start":272,"line_end":272,"column_start":19,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34321,"byte_end":34332,"line_start":15,"line_end":15,"column_start":39,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":225},"to":{"krate":18,"index":1277}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34636,"byte_end":34647,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":225},"to":{"krate":18,"index":1768}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":34831,"byte_end":34842,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":40760,"byte_end":40771,"line_start":208,"line_end":208,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":41256,"byte_end":41267,"line_start":222,"line_end":222,"column_start":25,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":41522,"byte_end":41541,"line_start":237,"line_end":237,"column_start":19,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/ipv6.rs","byte_start":42002,"byte_end":42013,"line_start":259,"line_end":259,"column_start":23,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":918,"byte_end":927,"line_start":33,"line_end":33,"column_start":39,"column_end":48},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":263},"to":{"krate":18,"index":1277}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1229,"byte_end":1238,"line_start":44,"line_end":44,"column_start":27,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":263},"to":{"krate":18,"index":1768}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":1641,"byte_end":1650,"line_start":60,"line_end":60,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":9384,"byte_end":9393,"line_start":283,"line_end":283,"column_start":18,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":9795,"byte_end":9804,"line_start":296,"line_end":296,"column_start":28,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":9913,"byte_end":9922,"line_start":302,"line_end":302,"column_start":28,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10026,"byte_end":10035,"line_start":308,"line_end":308,"column_start":23,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10273,"byte_end":10282,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/santamn/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.17.0/src/lib.rs","byte_start":10707,"byte_end":10724,"line_start":337,"line_end":337,"column_start":19,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":5625}}]}